{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "AdminUserName": {
      "type": "string",
      "minLength": 1
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "FEName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "FE",
      "metadata": {
        "description": "FE hostname"
      }
    },
    "FEImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "FE image publisher"
      }
    },
    "FEImageOffer": {
      "type": "string",
      "metadata": {
        "description": "FE image offer"
      }
    },
    "FEWindowsOSVersion": {
      "type": "string",
      "metadata": {
        "description": "FE Windows OS version"
      }
    },
    "FEStorageAccountContainerName": {
      "type": "string",
      "metadata": {
        "description": "FE Storage Container Name"
      }
    },
    "FESubnetRef": {
      "type": "string",
      "metadata": {
        "description": "Subnet Reference"
      }
    },
    "count": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of FE to deploy"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "defaultValue": "uniqueDnsNameforLBIP",
      "metadata": {
        "description": "Unique DNS name"
      }
    },
    "StorageACCName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Unique name"
      }
    },
    "FEVmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VM Size Controller"
      }
    }

  },
  "variables": {

    "location": "[resourceGroup().location]",
    "lbName": "[concat('LB', parameters('FEName'))]",
    "publicIPname": "[concat('PublicIP', variables('lbName'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPname'))]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "AVsetName": "[concat('AVset-', parameters('FEName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontend')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "apiver": "2015-06-15",
    "firewallRulesConfigurationFunction": "firewallRulesConfiguration.ps1\\Main"
 
  },
  "resources": [
    {
      "name": "[concat(parameters('FEName'), copyIndex(1), 'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "[variables('apiver')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'), '/inboundNatRules/', 'RDP-VM', copyIndex(1))]"
      ],
      "tags": {
        "displayName": "[concat(parameters('FEName'), copyIndex(1), 'NIC')]"
      },
      "copy": {
        "name": "NICcopy",
        "count": "[parameters('count')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('FESubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex(1))]"
                }

              ]

            }
          }
        ]
      }
    },
    {
      "name": "[variables('AVsetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[variables('location')]",
      "apiVersion": "[variables('apiver')]",
      "dependsOn": [ ],
      "tags": {
        "displayName": "[variables('AVsetName')]"
      }
    },
    {
      "apiVersion": "[variables('apiver')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameforLBIP')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiver')]",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[variables('location')]",
      "dependsOn": [
        "[variables('publicIPAddressID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBackend"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('lbID'), '/backendAddressPools/LoadBalancerBackend')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },

    {
      "apiVersion": "[variables('apiver')]",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('lbName'), '/', 'RDP-VM', copyIndex(1))]",
      "location": "[variables('location')]",
      "copy": {
        "name": "lbNatLoop",
        "count": "[parameters('count')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(50000)]",
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "[variables('apiver')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('FEName'), copyIndex(1), 'NIC')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('AVsetName'))]"
      ],
      "location": "[variables('location')]",
      "name": "[concat(parameters('FEName'), copyIndex(1))]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AVsetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('FEVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('FEName'), copyIndex(1))]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('FEImagePublisher')]",
            "offer": "[parameters('FEImageOffer')]",
            "sku": "[parameters('FEWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('FEOSDisk', copyIndex(1))]",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageACCName'), '.blob.core.windows.net/', parameters('FEStorageAccountContainerName'), '/', concat(parameters('FEName'),'OSDisk', copyIndex(1)), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('FEName'), copyIndex(1), 'NIC'))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "[concat(parameters('FEName'), copyIndex(1))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "copy": {
        "name": "VMcopy",
        "count": "[parameters('count')]"
      },
      "resources": [
        {
          "name": "firewallRules",
          "type": "extensions",
          "location": "[variables('location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('FEName'), copyIndex(1)))]"
          ],
          "tags": {
            "displayName": "firewallRules"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "https://raw.githubusercontent.com/jrfbal/plgndh/master/scripts/FEDSC.zip",
              "configurationFunction": "[variables('firewallRulesConfigurationFunction')]",
              "properties": {
                "nodeName": "[concat(parameters('FEName'), copyIndex(1))]"
              }
            },
            "protectedSettings": { }
          }
        }
      ]
    }
  ],
  "outputs": {
  }
}
